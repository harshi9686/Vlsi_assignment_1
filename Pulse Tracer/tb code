// Code your testbench here
// or browse Examples
module tb_pulse_detector;
    reg clk = 0;
    reg rst = 1;
    reg noisy_in;
    wire pulse_out;

    pulse_detector uut (
        .clk(clk),
        .rst(rst),
        .noisy_in(noisy_in),
        .pulse_out(pulse_out)
    );

    // Clock generation
    always #5 clk = ~clk;

    initial begin
        $dumpfile("pulse_detector.vcd");
        $dumpvars(0, tb_pulse_detector);

        // Reset
        noisy_in = 0;
        #15 rst = 0;

        // Noisy signal (glitches that should be ignored)
        #10 noisy_in = 1;  #10 noisy_in = 0;
        #5  noisy_in = 1;  #5  noisy_in = 0;

        // Clean high input
        #20 noisy_in = 1;  #50;

        // Drop low again
        #10 noisy_in = 0;  #50;

        // Another glitch
        #10 noisy_in = 1;  #5  noisy_in = 0;

        // Final clean input
        #20 noisy_in = 1;  #50;

        #50 $finish;
    end
endmodule
